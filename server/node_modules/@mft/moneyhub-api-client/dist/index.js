"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Moneyhub = void 0;
const openid_client_1 = require("openid-client");
const get_auth_urls_1 = __importDefault(require("./get-auth-urls"));
const tokens_1 = __importDefault(require("./tokens"));
const requests_1 = __importDefault(require("./requests"));
const R = __importStar(require("ramda"));
const request_1 = __importDefault(require("./request"));
const DEFAULT_TIMEOUT = 60000;
const _Moneyhub = async (apiClientConfig) => {
    const config = R.evolve({
        identityServiceUrl: (val) => val.replace("/oidc", ""),
    }, apiClientConfig);
    const { identityServiceUrl, options = {}, client: { client_id, client_secret, id_token_signed_response_alg, request_object_signing_alg, redirect_uri, keys, token_endpoint_auth_method, }, } = config;
    const { timeout = DEFAULT_TIMEOUT, apiVersioning = true } = options;
    openid_client_1.custom.setHttpOptionsDefaults({
        timeout,
    });
    const moneyhubIssuer = await openid_client_1.Issuer.discover(identityServiceUrl + "/oidc");
    const client = new moneyhubIssuer.Client({
        client_id,
        client_secret,
        id_token_signed_response_alg,
        redirect_uri,
        token_endpoint_auth_method,
        request_object_signing_alg,
    }, { keys });
    client[openid_client_1.custom.clock_tolerance] = 10;
    const request = (0, request_1.default)({
        client,
        options: { timeout, apiVersioning },
    });
    const moneyhub = {
        ...(0, get_auth_urls_1.default)({ client, config }),
        ...(0, tokens_1.default)({ client, config }),
        ...(0, requests_1.default)({ config, request }),
        keys: () => (keys && keys.length ? { keys } : null),
        generators: openid_client_1.generators,
    };
    return moneyhub;
};
const Moneyhub = _Moneyhub;
exports.Moneyhub = Moneyhub;
//# sourceMappingURL=index.js.map